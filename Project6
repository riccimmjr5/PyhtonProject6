### Problem/Answer section 6
### Create a convolutional neural network


from matplotlib import pyplot as plt

import tensorflow as tf
from tensorflow import keras
import numpy as np

(train_images, train_labels), (test_images, test_labels) = keras.datasets.fashion_mnist.load_data()

traindata = train_images.reshape(train_images.shape[0], 28, 28, 1)
testdata = test_images.reshape(test_images.shape[0], 28, 28, 1)
traindata = traindata.astype('float32') / 255
testdata = testdata.astype('float32') / 255


trainlabel = keras.utils.to_categorical(train_labels,10)
testlabel = keras.utils.to_categorical(test_labels, 10)

#Create Model
model = keras.Sequential()
model.add(keras.layers.Conv2D(32, kernel_size=(3,3), activation='relu', input_shape=(28,28,1)))
model.add(keras.layers.Conv2D(64, (3,3), activation='relu'))
model.add(keras.layers.MaxPooling2D(pool_size=(2,2)))
model.add(keras.layers.Dropout(0.25))
model.add(keras.layers.Flatten())
model.add(keras.layers.Dense(128,activation='relu'))
model.add(keras.layers.Dropout(0.5))
model.add(keras.layers.Dense(10,activation='softmax'))
model.summary()   #  he added this in the answer

model.compile(optimizer='adam',loss=keras.losses.categorical_crossentropy,metrics=['accuracy'])
model.fit(traindata, trainlabel, batch_size=128, epochs=3, verbose=1, validation_data=(testdata, testlabel))

score = model.evaluate(testdata, testlabel, verbose=0)
score
